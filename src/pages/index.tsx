import Head from "next/head";
import Link from "next/link";
import { useEffect } from "react";
import { createClient } from "@supabase/supabase-js";
import BorrowingTable from "~/components/layout/BorrowingTable";
import { env } from "~/env";

export default function Home() {
    const getData = async () => {
        const tomorrow = new Date();
        tomorrow.setDate(tomorrow.getDate() + 1);
        tomorrow.setHours(0, 0, 0, 0);

        const supabase = createClient(
            env.NEXT_PUBLIC_SUPABASE_URL!,
            env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,
        );

        const returnDate = tomorrow.toISOString();
        const { data: loanData, error: loanError } = await supabase
            .from("Loan")
            .select("*")
            .eq("returnedAt", returnDate);

        console.log(loanData);

        if (!loanData) return;

        const loansWithEmail = await Promise.all(
            loanData.map(async (loan) => {
                const { data: profile } = await supabase
                    .from("User")
                    .select("email")
                    .eq("id", loan.userId)
                    .single();

                return {
                    ...loan,
                    email: profile?.email,
                };
            }),
        );

        const loansWithItem = await Promise.all(
            loansWithEmail.map(async (loan) => {
                const { data: items, error } = await supabase
                    .from("LoanItem")
                    .select(
                        `
        id,
        loanId,
        itemId,
        Item (
          id,
          name
        )
      `,
                    )
                    .eq("loanId", loan.id);

                if (error) {
                    console.error(
                        `Error fetching items for loan ${loan.id}:`,
                        error,
                    );
                    return {
                        ...loan,
                        items: [],
                    };
                }

                return {
                    ...loan,
                    items,
                };
            }),
        );

        const loansWithJoinedNames = loansWithItem.map((loan) => {
            const joinedNames = loan.items.map((i) => i.Item.name).join(", ");
            return {
                ...loan,
                itemJoinedName: joinedNames,
            };
        });

        console.log(loansWithJoinedNames);
    };

    useEffect(() => {
        getData();
    }, []);
    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="flex min-h-screen flex-col items-center justify-center">
                <div className="mb-6">
                    <h1 className="text-3xl font-bold tracking-tight text-gray-800">
                        ðŸ“¦ Data Peminjaman Barang
                    </h1>
                    <p className="text-muted-foreground mt-2 max-w-xl text-base">
                        Halaman ini menampilkan daftar peminjam barang di{" "}
                        <span className="font-semibold">STAPIN MAUNC</span>
                        untuk keperluan praktikum atau proyek laboratorium.
                    </p>
                </div>
                <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16">
                    <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
                        Create{" "}
                        <span className="text-[hsl(280,100%,70%)]">T3</span> App
                    </h1>
                    <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
                        <Link
                            className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
                            href="https://create.t3.gg/en/usage/first-steps"
                            target="_blank"
                        >
                            <h3 className="text-2xl font-bold">
                                First Steps â†’
                            </h3>
                            <div className="text-lg">
                                Just the basics - Everything you need to know to
                                set up your database and authentication.
                            </div>
                        </Link>
                        <Link
                            className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
                            href="https://create.t3.gg/en/introduction"
                            target="_blank"
                        >
                            <h3 className="text-2xl font-bold">
                                Documentation â†’
                            </h3>
                            <div className="text-lg">
                                Learn more about Create T3 App, the libraries it
                                uses, and how to deploy it.
                            </div>
                        </Link>
                    </div>
                    <p className="text-2xl text-white"></p>
                </div>
                <BorrowingTable />
            </main>
        </>
    );
}
